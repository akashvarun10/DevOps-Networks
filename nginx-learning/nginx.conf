    http {
        # In this way, we should define for each file type
        # types {
        #     text/css css;
        #     text/html html;
        # }

        include /opt/homebrew/etc/nginx/mime.types;

        # for backend server load balancing using round robin
        ##spin up 4 servers on different ports using docker 
        upstream backendserver{
            server 127.0.0.1:1111;
            server 127.0.0.1:2222;
            server 127.0.0.1:3333;
            server 127.0.0.1:4444;
        }

        server {
            listen 8081;
            root /Users/akashvarun/Northeastern/DevOps-Networks/nginx-learning/my-site;

            rewrite ^/number/(\w+) /count/$1;

            location / {
                proxy_pass http://backendserver/;
            # for backend server load balancing using round robin

            }

             # Location block for /count followed by any digit
            location ~* /count/[0-9] {
                try_files /index.html =404;
            # This ensures that any request matching /count[0-9] serves index.html
            }

            location /fruits {
                root /Users/akashvarun/Northeastern/DevOps-Networks/nginx-learning/my-site;
            }

            location /carbs {
                alias /Users/akashvarun/Northeastern/DevOps-Networks/nginx-learning/my-site/fruits;
            }

            location /vegetables {
                root /Users/akashvarun/Northeastern/DevOps-Networks/nginx-learning/my-site;
                try_files /vegetables/veggies.html /index.html =404;

            }

            #  location /vegetables {
            #     root /Users/akashvarun/Northeastern/DevOps-Networks/nginx-learning/my-site;
            #     try_files /vegetables/veggiez.html /inde.html =404;

            # } If you want to serve index.html file when veggies.html and index.htmlis not found example by giving wrong name

            location /crops {
                return 307 /fruits;
            }
            #HTTP Code to redirect .

        }
}
    events {}

